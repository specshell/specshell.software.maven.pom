name: Release workflow
on:
  release:
    types:
      - published

jobs:
  release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: |
          [{
            "id": "specshell",
            "username": "${env.NEXUS_USER}",
            "password": "${env.NEXUS_PASSWORD}"
          },
          {
            "id": "ossrh",
            "username": "${env.OSSRH_USER}",
            "password": "${env.OSSRH_TOKEN}"
          }]

    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Get Version
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
        echo "TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        echo "GIT_SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Set version
      env:
        NEXUS_USER: ${{ secrets.NEXUS_USER }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: |
        mvn versions:set -DnewVersion=$RELEASE_VERSION

    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: GPG user IDs
      run: |
        echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
        echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
        echo "name:        ${{ steps.import_gpg.outputs.name }}"
        echo "email:       ${{ steps.import_gpg.outputs.email }}"

    - name: Deploy Nexus release
      env:
        NEXUS_USER: ${{ secrets.NEXUS_USER }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: |
        mvn -B -V --no-transfer-progress deploy \
          -P sign,deploy \
          --define gpg.keyname=${{ steps.import_gpg.outputs.fingerprint }} \
          --define gpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

    - name: Deploy GitHub release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -B -V --no-transfer-progress deploy \
          -P github,sign,deploy \
          --define github.repo=specshell.software.maven.pom \
          --define gpg.keyname=${{ steps.import_gpg.outputs.fingerprint }} \
          --define gpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

    - name: Deploy Maven Central release
      env:
        OSSRH_USER: ${{ secrets.OSSRH_USER }}
        OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      run: |
        mvn -B -V --no-transfer-progress deploy \
          -P ossrh,sign,deploy \
          --define gpg.keyname=${{ steps.import_gpg.outputs.fingerprint }} \
          --define gpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

    - name: GPG Verify
      run: gpg --verify target/pom-*.pom.asc target/pom-*.pom
